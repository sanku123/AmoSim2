<Application x:Class="AmoSim2.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:vm="clr-namespace:AmoSim2.ViewModel" xmlns:pl="clr-namespace:AmoSim2.Player" xmlns:Views="clr-namespace:AmoSim2.UserControls" xmlns:app="clr-namespace:AmoSim2.Others" StartupUri="MainWindow.xaml">
  <Application.Resources>
    <ResourceDictionary>

      <ResourceDictionary.MergedDictionaries>
      </ResourceDictionary.MergedDictionaries>

      <vm:ViewModelLocator x:Key="ViewModelLocator" />

      <Style x:Key="CardLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="0,5,5,5" />
      </Style>

      <Style x:Key="CalculatedValue" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFFBFBFB" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="14,0,0,6" />
        <!--<Setter Property="Width" Value="45" />-->
      </Style>

      <Style x:Key="Card" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="8,2,8,8" />
        <Setter Property="Margin" Value="6,4,0,0" />
        <Setter Property="Opacity" Value="0.8" />
        <Setter Property="Background">
          <Setter.Value>
            <SolidColorBrush Opacity="0.15" Color="White" />
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <EventTrigger RoutedEvent="UIElement.MouseEnter">
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0.8" To="1" Duration="0:0:0.2" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>

          <EventTrigger RoutedEvent="UIElement.MouseLeave">
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="0.8" Duration="0:0:0.2" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="MediumButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="1,0,0,0" />
        <Setter Property="BorderThickness" Value="0,0,5,0" />
        <Setter Property="BorderBrush" Value="White" />

        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border x:Name="border" Padding="20,10,20,10" Background="{TemplateBinding Background}" BorderThickness="0">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="BorderBrush" Value="white" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>

        <Setter Property="Background">
          <Setter.Value>
            <SolidColorBrush Opacity="0.05" Color="White" />
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <EventTrigger RoutedEvent="UIElement.MouseEnter">
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0.75" To="1" Duration="0:0:0.3" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>

          <EventTrigger RoutedEvent="UIElement.MouseLeave">
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="0.75" Duration="0:0:0.2" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="LargeButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="0">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="BorderBrush" Value="white" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>

        <Setter Property="Background">
          <Setter.Value>
            <SolidColorBrush Opacity="0.05" Color="White" />
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <EventTrigger RoutedEvent="UIElement.MouseEnter">
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0.75" To="1" Duration="0:0:0.3" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>

          <EventTrigger RoutedEvent="UIElement.MouseLeave">
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="0.75" Duration="0:0:0.2" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>
        </Style.Triggers>
      </Style>

      <Style TargetType="{x:Type DataGridCell}" />

      <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Margin" Value="15,0,0,0" />

        <Setter Property="Foreground" Value="#FFECEAFF" />
        <Setter Property="Background">
          <Setter.Value>
            <SolidColorBrush Opacity="0.05" Color="Black" />
          </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="45" />
      </Style>

      <Style TargetType="{x:Type DataGridRow}">
        <Style.Setters>
          <Setter Property="BorderThickness" Value="1" />
          <Setter Property="Background" Value="Transparent" />
        </Style.Setters>
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="BorderBrush" Value="#FFF37C21" />
          </Trigger>
          <Trigger Property="IsSelected" Value="True">
            <Trigger.EnterActions>
              <BeginStoryboard>
                <Storyboard>
                  <ColorAnimation Storyboard.TargetProperty="(DataGridRow.Background).(SolidColorBrush.Color)" To="#FFF37C21" Duration="00:00:0.2" />
                </Storyboard>
              </BeginStoryboard>
            </Trigger.EnterActions>
            <Trigger.ExitActions>
              <BeginStoryboard>
                <Storyboard>
                  <ColorAnimation Storyboard.TargetProperty="(DataGridRow.Background).(SolidColorBrush.Color)" To="Transparent" Duration="00:00:0.2" />
                </Storyboard>
              </BeginStoryboard>
            </Trigger.ExitActions>
          </Trigger>
        </Style.Triggers>
      </Style>

      <Style TargetType="ListBox">
        <Setter Property="BorderThickness" Value="0" />
      </Style>

      <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBoxItem}">
              <Border x:Name="border" Padding="6,0,0,0" Background="{TemplateBinding Background}" BorderThickness="0">
                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="BorderBrush" Value="#FF594B89" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                  <Setter TargetName="border" Property="BorderBrush" Value="#FF594B89" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Style.Triggers>
          <Trigger Property="IsSelected" Value="True">
            <Setter Property="Control.Background" Value="#33FFFFFF" />
            <Setter Property="Control.BorderBrush" Value="#FF594B89" />
          </Trigger>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Control.Background" Value="#33FFFFFF" />
            <Setter Property="Control.BorderBrush" Value="#FF594B89" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Trigger.EnterActions>
              <BeginStoryboard>
                <Storyboard>
                  <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.4" />
                </Storyboard>
              </BeginStoryboard>
            </Trigger.EnterActions>
            <Trigger.ExitActions>
              <BeginStoryboard>
                <Storyboard>
                  <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:4" />
                </Storyboard>
              </BeginStoryboard>
            </Trigger.ExitActions>
          </Trigger>
        </Style.Triggers>
      </Style>
    </ResourceDictionary>
  </Application.Resources>
</Application>