<Application x:Class="AmoSim2.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ui="clr-namespace:ModernWpf.Controls;assembly=ModernWpf" xmlns:ui1="http://schemas.modernwpf.com/2019" xmlns:vm="clr-namespace:AmoSim2.ViewModel" StartupUri="MainWindow.xaml">
  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ui:XamlControlsResources />
      </ResourceDictionary.MergedDictionaries>

      <vm:ViewModelLocator x:Key="ViewModelLocator" />

      <Style x:Key="CardLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#FFD3D4FB" />
        <Setter Property="FontWeight" Value="Bold" />

      </Style>

      <Style x:Key="Card" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="6" />
        <Setter Property="Margin" Value="6,6,0,0" />
        <Setter Property="Opacity" Value="0.75" />
        <Setter Property="Background">
          <Setter.Value>
            <SolidColorBrush Opacity="0.05" Color="White" />
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <EventTrigger RoutedEvent="UIElement.MouseEnter">
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0.75" To="1" Duration="0:0:0.3" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>

          <EventTrigger RoutedEvent="UIElement.MouseLeave">
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="0.75" Duration="0:0:0.2" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="MediumButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="1,0,0,0" />
        <Setter Property="BorderThickness" Value="0,0,5,0" />
        <Setter Property="BorderBrush" Value="White" />

        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border x:Name="border" Padding="20,10,20,10" Background="{TemplateBinding Background}" BorderThickness="0">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="BorderBrush" Value="white" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>

        <Setter Property="Background">
          <Setter.Value>
            <SolidColorBrush Opacity="0.05" Color="White" />
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <EventTrigger RoutedEvent="UIElement.MouseEnter">
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0.75" To="1" Duration="0:0:0.3" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>

          <EventTrigger RoutedEvent="UIElement.MouseLeave">
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="0.75" Duration="0:0:0.2" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="LargeButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border x:Name="border" Padding="40,20,40,20" Background="{TemplateBinding Background}" BorderThickness="0">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="BorderBrush" Value="white" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>

        <Setter Property="Background">
          <Setter.Value>
            <SolidColorBrush Opacity="0.05" Color="White" />
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <EventTrigger RoutedEvent="UIElement.MouseEnter">
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0.75" To="1" Duration="0:0:0.3" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>

          <EventTrigger RoutedEvent="UIElement.MouseLeave">
            <BeginStoryboard>
              <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="0.75" Duration="0:0:0.2" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>
        </Style.Triggers>
      </Style>

      <Style TargetType="{x:Type DataGridCell}">

      </Style>

      <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Margin" Value="15,0,0,0" />

        <Setter Property="Foreground" Value="#FFECEAFF" />
        <Setter Property="Background">
          <Setter.Value>
            <SolidColorBrush Opacity="0.05" Color="Black" />
          </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="45" />
      </Style>

      <Style TargetType="{x:Type DataGridRow}">
        <Style.Setters>
          <Setter Property="BorderThickness" Value="1" />
          <Setter Property="Background" Value="Transparent" />
        </Style.Setters>
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="BorderBrush" Value="#FFF37C21" />
          </Trigger>
          <Trigger Property="IsSelected" Value="True">
            <Trigger.EnterActions>
              <BeginStoryboard>
                <Storyboard>
                  <ColorAnimation Storyboard.TargetProperty="(DataGridRow.Background).(SolidColorBrush.Color)" Duration="00:00:0.2" To="#FFF37C21" />
                </Storyboard>
              </BeginStoryboard>
            </Trigger.EnterActions>
            <Trigger.ExitActions>
              <BeginStoryboard>
                <Storyboard>
                  <ColorAnimation Storyboard.TargetProperty="(DataGridRow.Background).(SolidColorBrush.Color)" Duration="00:00:0.2" To="Transparent" />
                </Storyboard>
              </BeginStoryboard>
            </Trigger.ExitActions>
          </Trigger>
        </Style.Triggers>
      </Style>

      <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <Setter Property="Padding" Value="15,9,0,12" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="ui1:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBoxItem}">
              <Border x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <Grid>
                  <Rectangle x:Name="PressedBackground" ui1:FocusVisualHelper.IsTemplateFocusTarget="True" Fill="Transparent" />
                  <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.FontSize="{DynamicResource ControlContentThemeFontSize}" TextElement.FontWeight="Normal" />
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                  <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                </Trigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="False" />
                  </MultiTrigger.Conditions>
                  <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentMediumLowBrush}" />
                  <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="False" />
                  </MultiTrigger.Conditions>
                  <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentMediumLowBrush}" />
                  <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                  </MultiTrigger.Conditions>
                  <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentLowBrush}" />
                  <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                </MultiTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
        <Style.BasedOn>
          <Style TargetType="{x:Type DataGrid}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="ColumnHeaderStyle">
              <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                  <Setter Property="OverridesDefaultStyle" Value="True" />
                  <Setter Property="Background">
                    <Setter.Value>
                      <SolidColorBrush Color="White" Opacity="0.01" />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Foreground" Value="#FFEFEBFB" />
                  <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                  <Setter Property="VerticalContentAlignment" Value="Center" />
                  <Setter Property="IsTabStop" Value="False" />
                  <Setter Property="SeparatorBrush" Value="{DynamicResource GridLinesBrush}" />
                  <Setter Property="Padding" Value="12,0,0,0" />
                  <Setter Property="FontSize" Value="16" />
                  <Setter Property="FontWeight" Value="Bold" />

                  <Setter Property="Height" Value="50" />

                  <Setter Property="MinHeight" Value="32" />
                  <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <ControlTemplate.Resources>
                          <StreamGeometry x:Key="SortIconDescending">M19.189453,10.751953L10,19.941406 0.810547,10.751953 1.689453,9.873047 9.375,17.558594 9.375,0 10.625,0 10.625,17.558594 18.310547,9.873047z</StreamGeometry>
                          <StreamGeometry x:Key="SortIconAscending">M18.310547,10.126953L10.625,2.441406 10.625,20 9.375,20 9.375,2.441406 1.689453,10.126953 0.810547,9.248047 10,0.058594 19.189453,9.248047z</StreamGeometry>
                        </ControlTemplate.Resources>
                        <Grid x:Name="ColumnHeaderRoot">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                          </Grid.ColumnDefinitions>
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                              <VisualState x:Name="Unfocused" />
                              <VisualState x:Name="Focused">
                                <Storyboard>
                                  <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                              <VisualState x:Name="Unsorted" />
                              <VisualState x:Name="SortAscending">
                                <Storyboard>
                                  <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SortIcon">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                      <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                      </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                  </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="SortDescending">
                                <Storyboard>
                                  <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SortIcon">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                      <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                      </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                  </ObjectAnimationUsingKeyFrames>
                                  <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Data" Storyboard.TargetName="SortIcon">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                      <DiscreteObjectKeyFrame.Value>
                                        <StreamGeometry>M19.189453,10.751953L10,19.941406 0.810547,10.751953 1.689453,9.873047 9.375,17.558594 9.375,0 10.625,0 10.625,17.558594 18.310547,9.873047z</StreamGeometry>
                                      </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                  </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <Rectangle x:Name="BackgroundRectangle" Grid.ColumnSpan="2" Fill="{TemplateBinding Background}" Stretch="Fill" />
                          <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="*" />
                              <ColumnDefinition x:Name="SortIconColumn" MinWidth="32" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center">
                              <ContentPresenter.Resources>
                                <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
                                  <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                </Style>
                              </ContentPresenter.Resources>
                            </ContentPresenter>
                            <ui1:FontIconFallback x:Name="SortIcon" Grid.Column="1" Data="M18.310547,10.126953L10.625,2.441406 10.625,20 9.375,20 9.375,2.441406 1.689453,10.126953 0.810547,9.248047 10,0.058594 19.189453,9.248047z" Foreground="{DynamicResource DataGridColumnHeaderForegroundBrush}" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" Visibility="Collapsed" VerticalAlignment="Center" />
                          </Grid>
                          <Rectangle x:Name="VerticalSeparator" Grid.Column="1" Fill="{TemplateBinding SeparatorBrush}" Visibility="{TemplateBinding SeparatorVisibility}" VerticalAlignment="Stretch" Width="1" />
                          <Grid x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0">
                            <Rectangle x:Name="FocusVisualPrimary" Fill="Transparent" HorizontalAlignment="Stretch" IsHitTestVisible="False" Stroke="{DynamicResource DataGridCellFocusVisualPrimaryBrush}" StrokeThickness="2" VerticalAlignment="Stretch" />
                            <Rectangle x:Name="FocusVisualSecondary" Fill="Transparent" HorizontalAlignment="Stretch" IsHitTestVisible="False" Margin="2" Stroke="{DynamicResource DataGridCellFocusVisualSecondaryBrush}" StrokeThickness="1" VerticalAlignment="Stretch" />
                          </Grid>
                          <Thumb x:Name="PART_LeftHeaderGripper" Grid.ColumnSpan="2" HorizontalAlignment="Left">
                            <Thumb.Style>
                              <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Width" Value="8" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Cursor" Value="SizeWE" />
                                <Setter Property="Template">
                                  <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                      <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                                    </ControlTemplate>
                                  </Setter.Value>
                                </Setter>
                              </Style>
                            </Thumb.Style>
                          </Thumb>
                          <Thumb x:Name="PART_RightHeaderGripper" Grid.ColumnSpan="2" HorizontalAlignment="Right">
                            <Thumb.Style>
                              <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Width" Value="8" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Cursor" Value="SizeWE" />
                                <Setter Property="Template">
                                  <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                      <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                                    </ControlTemplate>
                                  </Setter.Value>
                                </Setter>
                              </Style>
                            </Thumb.Style>
                          </Thumb>
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridColumnHeaderHoveredBackgroundBrush}" />
                          </Trigger>
                          <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="BackgroundRectangle">
                              <Setter.Value>
                                <SolidColorBrush Color="White" Opacity="0.15" />
                              </Setter.Value>
                            </Setter>
                          </Trigger>
                          <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter Property="MinWidth" TargetName="SortIconColumn" Value="0" />
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                  <Style.Triggers>
                    <Trigger Property="SortDirection" Value="{x:Null}">
                      <Setter Property="Padding" Value="12,0" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </Setter.Value>
            </Setter>
            <Setter Property="RowHeaderStyle">
              <Setter.Value>
                <Style TargetType="{x:Type DataGridRowHeader}">
                  <Setter Property="OverridesDefaultStyle" Value="True" />
                  <Setter Property="Background" Value="{DynamicResource DataGridRowHeaderBackgroundBrush}" />
                  <Setter Property="Foreground" Value="{DynamicResource DataGridRowHeaderForegroundBrush}" />
                  <Setter Property="IsTabStop" Value="False" />
                  <Setter Property="SeparatorBrush" Value="{DynamicResource GridLinesBrush}" />
                  <Setter Property="Padding" Value="12,0,13,0" />
                  <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                        <Grid x:Name="RowHeaderRoot">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                          </Grid.ColumnDefinitions>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                          </Grid.RowDefinitions>
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                              <ui1:VisualStateGroupListener.Listener>
                                <ui1:VisualStateGroupListener x:Name="CommonStatesListener" />
                              </ui1:VisualStateGroupListener.Listener>
                              <VisualState x:Name="Normal" />
                              <VisualState x:Name="Normal_CurrentRow" />
                              <VisualState x:Name="Normal_Selected">
                                <Storyboard />
                              </VisualState>
                              <VisualState x:Name="Normal_EditingRow" />
                              <VisualState x:Name="Normal_CurrentRow_Selected">
                                <Storyboard />
                              </VisualState>
                              <VisualState x:Name="MouseOver">
                                <Storyboard />
                              </VisualState>
                              <VisualState x:Name="MouseOver_CurrentRow" />
                              <VisualState x:Name="MouseOver_Unfocused_EditingRow" />
                              <VisualState x:Name="MouseOver_EditingRow" />
                              <VisualState x:Name="MouseOver_Unfocused_Selected" />
                              <VisualState x:Name="MouseOver_Unfocused_CurrentRow_Selected" />
                              <VisualState x:Name="MouseOver_CurrentRow_Selected">
                                <Storyboard />
                              </VisualState>
                              <VisualState x:Name="MouseOver_Selected" />
                              <VisualState x:Name="Unfocused_EditingRow" />
                              <VisualState x:Name="Unfocused_Selected" />
                              <VisualState x:Name="Unfocused_CurrentRow_Selected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                              <VisualState x:Name="RowValid" />
                              <VisualState x:Name="RowInvalid">
                                <Storyboard>
                                  <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundRectangle" />
                                  <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RowInvalidVisualElement" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <Border BorderBrush="{TemplateBinding SeparatorBrush}" BorderThickness="0,0,1,0" Grid.ColumnSpan="2" Grid.RowSpan="3">
                            <Grid Background="{TemplateBinding Background}">
                              <Rectangle x:Name="RowInvalidVisualElement" Fill="{DynamicResource DataGridRowInvalidBrush}" Opacity="0" Stretch="Fill" />
                              <Rectangle x:Name="BackgroundRectangle" Fill="Transparent" Stretch="Fill" />
                            </Grid>
                          </Border>
                          <Rectangle x:Name="HorizontalSeparator" Grid.ColumnSpan="2" Fill="{TemplateBinding SeparatorBrush}" HorizontalAlignment="Stretch" Height="1" Margin="1,0" Grid.Row="2" Visibility="{TemplateBinding SeparatorVisibility}" />
                          <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" Grid.RowSpan="2" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                          <Thumb x:Name="PART_TopHeaderGripper" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top">
                            <Thumb.Style>
                              <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Height" Value="8" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Cursor" Value="SizeNS" />
                                <Setter Property="Template">
                                  <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                      <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                                    </ControlTemplate>
                                  </Setter.Value>
                                </Setter>
                              </Style>
                            </Thumb.Style>
                          </Thumb>
                          <Thumb x:Name="PART_BottomHeaderGripper" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Bottom">
                            <Thumb.Style>
                              <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Height" Value="8" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Cursor" Value="SizeNS" />
                                <Setter Property="Template">
                                  <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                      <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                                    </ControlTemplate>
                                  </Setter.Value>
                                </Setter>
                              </Style>
                            </Thumb.Style>
                          </Thumb>
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="Normal_Selected">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedBackground}" />
                            <Setter Property="Opacity" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedBackgroundOpacity}" />
                          </Trigger>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="Normal_CurrentRow_Selected">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedBackground}" />
                            <Setter Property="Opacity" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedBackgroundOpacity}" />
                          </Trigger>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="MouseOver">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                          </Trigger>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="MouseOver_CurrentRow">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                          </Trigger>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="MouseOver_Unfocused_EditingRow">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                          </Trigger>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="MouseOver_EditingRow">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                          </Trigger>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="MouseOver_Unfocused_Selected">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedHoveredUnfocusedBackground}" />
                            <Setter Property="Opacity" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedHoveredUnfocusedBackgroundOpacity}" />
                          </Trigger>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="MouseOver_Unfocused_CurrentRow_Selected">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedHoveredUnfocusedBackground}" />
                            <Setter Property="Opacity" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedHoveredUnfocusedBackgroundOpacity}" />
                          </Trigger>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="MouseOver_CurrentRow_Selected">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedHoveredBackground}" />
                            <Setter Property="Opacity" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedHoveredBackgroundOpacity}" />
                          </Trigger>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="MouseOver_Selected">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedHoveredBackground}" />
                            <Setter Property="Opacity" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedHoveredBackgroundOpacity}" />
                          </Trigger>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="Unfocused_EditingRow">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedBackground}" />
                          </Trigger>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="Unfocused_Selected">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedUnfocusedBackground}" />
                            <Setter Property="Opacity" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedUnfocusedBackgroundOpacity}" />
                          </Trigger>
                          <Trigger Property="CurrentStateName" SourceName="CommonStatesListener" Value="Unfocused_CurrentRow_Selected">
                            <Setter Property="Fill" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedUnfocusedBackground}" />
                            <Setter Property="Opacity" TargetName="BackgroundRectangle" Value="{DynamicResource DataGridRowSelectedUnfocusedBackgroundOpacity}" />
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Setter.Value>
            </Setter>
            <Setter Property="RowStyle">
              <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                  <Style.Setters>
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                  </Style.Setters>
                  <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter Property="Background">
                        <Setter.Value>
                          <SolidColorBrush Color="#FF3500D3" Opacity="0.1" />
                        </Setter.Value>
                      </Setter>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                      <Setter Property="Background">
                        <Setter.Value>
                          <SolidColorBrush Color="#FF3500D3" Opacity="0.3" />
                        </Setter.Value>
                      </Setter>
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
              <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                  <Setter Property="OverridesDefaultStyle" Value="True" />
                  <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundBrush}" />
                  <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                  <Setter Property="VerticalContentAlignment" Value="Stretch" />
                  <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
                  <Setter Property="MinHeight" Value="{DynamicResource DataGridRowMinHeight}" />
                  <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <ui1:DataGridCellPresenter Background="{TemplateBinding Background}" CurrencyVisualThickness="1" ContentTemplate="{TemplateBinding ContentTemplate}" CurrencyVisualBrush="{DynamicResource DataGridCurrencyVisualPrimaryBrush}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" FocusVisualPrimaryBrush="{DynamicResource DataGridCellFocusVisualPrimaryBrush}" FocusVisualSecondaryThickness="1" FocusVisualPrimaryThickness="2" FocusVisualSecondaryBrush="{DynamicResource DataGridCellFocusVisualSecondaryBrush}" IsFocusVisualVisible="{TemplateBinding IsKeyboardFocusWithin}" IsCurrencyVisualVisible="{TemplateBinding IsSelected}" MinHeight="{TemplateBinding MinHeight}" SnapsToDevicePixels="True" />
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource GridLinesBrush}" />
            <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource GridLinesBrush}" />
            <Setter Property="GridLinesVisibility" Value="Horizontal" />
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
            <Setter Property="MinRowHeight" Value="{DynamicResource DataGridRowMinHeight}" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ui1:DataGridHelper.TextColumnElementStyle">
              <Setter.Value>
                <Style TargetType="{x:Type TextBlock}">
                  <Style.Resources>
                    <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
                      <Setter Property="OverridesDefaultStyle" Value="True" />
                      <Setter Property="TextDecorations" Value="Underline" />
                      <Setter Property="ui1:HyperlinkHelper.IsPressEnabled" Value="True" />
                      <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                          <Setter Property="Foreground" Value="{DynamicResource SystemControlHyperlinkBaseMediumBrush}" />
                        </Trigger>
                        <Trigger Property="ui1:HyperlinkHelper.IsPressed" Value="True">
                          <Setter Property="Foreground" Value="{DynamicResource SystemControlHighlightBaseMediumLowBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                          <Setter Property="Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                          <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </Style.Resources>
                  <Setter Property="Padding" Value="12,0" />
                  <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
              </Setter.Value>
            </Setter>
            <Setter Property="ui1:DataGridHelper.TextColumnEditingElementStyle" Value="{DynamicResource DataGridTextBoxStyle}" />
            <Setter Property="ui1:DataGridHelper.TextColumnFontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
            <Setter Property="ui1:DataGridHelper.CheckBoxColumnElementStyle" Value="{DynamicResource DataGridReadOnlyCheckBoxStyle}" />
            <Setter Property="ui1:DataGridHelper.CheckBoxColumnEditingElementStyle" Value="{DynamicResource DataGridCheckBoxStyle}" />
            <Setter Property="ui1:DataGridHelper.ComboBoxColumnElementStyle" Value="{DynamicResource DataGridTextBlockComboBoxStyle}" />
            <Setter Property="ui1:DataGridHelper.ComboBoxColumnEditingElementStyle" Value="{DynamicResource DataGridComboBoxStyle}" />
            <Setter Property="ui1:DataGridHelper.HyperlinkColumnElementStyle" Value="{DynamicResource DataGridTextBlockStyle}" />
            <Setter Property="ui1:DataGridHelper.HyperlinkColumnEditingElementStyle" Value="{DynamicResource DataGridTextBoxStyle}" />
            <Setter Property="ui1:DataGridHelper.UseModernColumnStyles" Value="True" />
            <Setter Property="ui1:DataGridHelper.IsEnabled" Value="True" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                  <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                    <ScrollViewer x:Name="DG_ScrollViewer" ui1:ScrollViewerHelper.AutoHideScrollBars="False" Focusable="False">
                      <ScrollViewer.Template>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                          <Grid>
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="Auto" />
                              <ColumnDefinition Width="*" />
                              <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                              <RowDefinition Height="Auto" />
                              <RowDefinition Height="*" />
                              <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Button Command="ApplicationCommands.SelectAll" Focusable="False" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                              <Button.Visibility>
                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                  <Binding.ConverterParameter>
                                    <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                  </Binding.ConverterParameter>
                                </Binding>
                              </Button.Visibility>
                            </Button>
                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.ColumnSpan="2" Grid.Column="1">
                              <DataGridColumnHeadersPresenter.Visibility>
                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                  <Binding.ConverterParameter>
                                    <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                  </Binding.ConverterParameter>
                                </Binding>
                              </DataGridColumnHeadersPresenter.Visibility>
                            </DataGridColumnHeadersPresenter>
                            <Rectangle x:Name="ColumnHeadersAndRowsSeparator" Grid.ColumnSpan="3" Fill="{DynamicResource GridLinesBrush}" Height="1" StrokeThickness="1" VerticalAlignment="Bottom" Width="Auto" />
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" Grid.ColumnSpan="2" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Grid.Row="1" />
                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" />
                            <Grid Grid.Column="1" Grid.Row="2">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}" />
                                <ColumnDefinition Width="*" />
                              </Grid.ColumnDefinitions>
                              <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" />
                            </Grid>
                          </Grid>
                        </ControlTemplate>
                      </ScrollViewer.Template>
                      <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsGrouping" Value="True" />
                  <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
              </MultiTrigger>
            </Style.Triggers>
          </Style>
        </Style.BasedOn>
      </Style>

    </ResourceDictionary>
  </Application.Resources>
</Application>
